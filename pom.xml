<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>dev.simonverhoeven</groupId>
    <artifactId>pitest-demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>Pitest demo</name>
    <description>Demo project for Pitest</description>
    <properties>
        <java.version>17</java.version>
        <maven.surefire.plugin.version>3.1.2</maven.surefire.plugin.version>
        <jacoco.maven.plugin.version>0.8.10</jacoco.maven.plugin.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>5.9.3</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>1.14.2</version>
                <dependencies>
<!--                    We need this plugin if we're using JUnit 5-->
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>1.2.0</version>
                    </dependency>
                </dependencies>
                <configuration>
<!--                    defines which classes will be mutated, please pay attention to the * at the end! -->
                    <targetClasses>
                        <param>dev.simonverhoeven.pitestdemo*</param>
                    </targetClasses>
<!--                    defines which tests will be executed, please pay attention to the * at the end! -->
                    <targetTests>
                        <param>dev.simonverhoeven.pitestdemo*</param>
                    </targetTests>
<!--                    <maxMutationsPerClass>20</maxMutationsPerClass>-->
<!--                    mutators defines the list if mutators to apply, we can define individual ones, or pass in a one of the group names (OLD/DEFAULTS/DEFAULTS/STRONGER/ALL)-->
<!--                    <mutators>-->
<!--                        <mutator>-->
<!--                            ALL-->
<!--                        </mutator>-->
<!--                        vs-->
<!--                        <mutator>-->
<!--                            INVERT_NEGS-->
<!--                        </mutator>-->
<!--                        <mutator>-->
<!--                            MATH-->
<!--                        </mutator>-->
<!--                    </mutators>-->
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>mutationCoverage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
